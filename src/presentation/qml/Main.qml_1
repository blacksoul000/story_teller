import QtQuick 2.5
import QtQuick.Controls 2.1
//import QtQuick.Controls.Styles 1.4
import QtQuick.Dialogs 1.2
import QtQuick.Layouts 1.1
 
ApplicationWindow {
    visible: true
    width: 640
    height: 480
    title: qsTr("Hello World") // Ну как же без Приветствия Миру
    color: "white"


    Item {
        width: 640
        height: 480
     
     
        // Слой с кнопками
        RowLayout {
            anchors.centerIn: parent
     
            // Первая кнопка
            Rectangle {
                width: 100; height: 100
                color: "red"
                MouseArea {
                    anchors.fill: parent
                    onClicked: dialogAndroid.open();
                }
            }
        }
 
        // Растягиваем объект главного окна по всему родительскому элементу
        anchors.fill: parent
 
        // Создаём объект диалогового окна
        Dialog {
            id: dialogAndroid
            /* Когда деплоите под Android-устройства,
             * обязательно закоментируйте эти две строки,
             * иначе словите глюки в работе устройства
             */
            width: 600  // Задаём ширину диалога, работает на десктопе, но на Android не сработает
            height: 500 // Задаём высоту диалога, работает на декстопе, но на Android не сработает
 
            // Создаём содержимое диалогового окна
            contentItem: Rectangle {
                width: 300          // Устанавливаем ширину, необходимо для Android-устройства
                height: 200         // Устанавливаем высоту, необходимо для Android-устройства
                color: "#f7f7f7"    // Задаём цвет
 
                // Область для сообщения диалогового окна
                Rectangle {
                    /* Прибиваем область к левой, правой и верхней частям диалога,
                     * а также снизу к разделителю, который отделяет область от кнопок
                     */
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.top: parent.top
                    anchors.bottom: dividerHorizontal.top
                    color: "#f7f7f7"  // Задаём цвет области
 
                    // Задаём сообщение диалогового окна
                    Text {
                        id: textLabel
                        text: qsTr("Hello, Dialog!!!")
                        color: "#34aadc"
                        anchors.centerIn: parent // Помещаем сообщение в центре области для сообщения
                    }
                }
 
                // Создаём горизонтальный разделитель с помощью Rectangle
                Rectangle {
                    id: dividerHorizontal
                    color: "#d7d7d7"
                    height: 2 // Устанавливаем ширину в два пикселя
                    anchors.left: parent.left
                    anchors.right: parent.right
                    anchors.bottom: row.top
                }
 
                /* Создаём подложку для кнопок в виде объекта Строки
                 * В данном объекте для объектов детей не работают некоторые параметры
                 * anchors, кроме параметров anchors.top и anchors.bottom
                 */
                Row {
                    id: row
                    height: 100 // Задаём высоту
                    // А также прибиваем строку к низу диалогового окна
                    anchors.bottom: parent.bottom
                    anchors.left: parent.left
                    anchors.right: parent.right

                    Rectangle {
                        width: 50; height: 50
                        MouseArea {
                            anchors.fill: parent
                            onClicked: dialogAndroid.close();
                        }
                    }
 
                    // Создаём разделитель между кнопками шириной в 2 пикселя
                    Rectangle {
                        id: dividerVertical
                        width: 2
                        // Растягиваем разделитель по высоте объекта строки
                        anchors.top: parent.top
                        anchors.bottom: parent.bottom
                        color: "#d7d7d7" // Задаём цвет разделителя
                    }
                    Rectangle {
                        width: 50; height: 50
                        MouseArea {
                            anchors.fill: parent
                            onClicked: dialogAndroid.close();
                        }
                    }
 
                }
            }
        }
    }
}